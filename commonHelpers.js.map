{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst button = document.querySelector('button');\nbutton.setAttribute('disabled', '');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    let today = new Date();\n    if (selectedDates[0].getTime() <= today.getTime()) {\n      button.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        titleColor: '#FFFFFF',\n        messageColor: '#FFFFFF',\n        theme: 'dark',\n        message: 'Please choose a date in the future',\n      });\n\n      console.log(selectedDates[0]);\n    } else {\n      button.disabled = false;\n      button.addEventListener('click', () => {\n        userSelectedDate = selectedDates[0].getTime();\n        setInterval(updateTimer, 1000);\n        button.disabled = true;\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction updateTimer() {\n  const daysElement = document.querySelector('[data-days]');\n  const hoursElement = document.querySelector('[data-hours]');\n  const minutesElement = document.querySelector('[data-minutes]');\n  const secondsElement = document.querySelector('[data-seconds]');\n\n  const now = new Date().getTime();\n\n  const ms = userSelectedDate - now;\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  if (ms >= 0) {\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    daysElement.innerText = days.toString().padStart(2, '0');\n    hoursElement.innerText = hours.toString().padStart(2, '0');\n    minutesElement.innerText = minutes.toString().padStart(2, '0');\n    secondsElement.innerText = seconds.toString().padStart(2, '0');\n  } else {\n    clearInterval(updateTimer);\n    daysElement.textContent = '00';\n    hoursElement.textContent = '00';\n    minutesElement.textContent = '00';\n    secondsElement.textContent = '00';\n  }\n}\n"],"names":["userSelectedDate","button","options","selectedDates","today","iziToast","updateTimer","flatpickr","daysElement","hoursElement","minutesElement","secondsElement","now","ms","second","minute","hour","day","days","hours","minutes","seconds"],"mappings":"2GAKA,IAAIA,EACJ,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,aAAa,WAAY,EAAE,EAElC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,IAAIC,EAAQ,IAAI,KACZD,EAAc,GAAG,QAAO,GAAMC,EAAM,WACtCH,EAAO,SAAW,GAClBI,EAAS,MAAM,CACb,MAAO,QACP,SAAU,WACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,MAAO,OACP,QAAS,oCACjB,CAAO,EAED,QAAQ,IAAIF,EAAc,EAAE,IAE5BF,EAAO,SAAW,GAClBA,EAAO,iBAAiB,QAAS,IAAM,CACrCD,EAAmBG,EAAc,GAAG,QAAO,EAC3C,YAAYG,EAAa,GAAI,EAC7BL,EAAO,SAAW,EAC1B,CAAO,EAEJ,CACH,EAEAM,EAAU,mBAAoBL,CAAO,EAErC,SAASI,GAAc,CACrB,MAAME,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAExDC,EAAM,IAAI,KAAM,EAAC,QAAO,EAExBC,EAAKb,EAAmBY,EACxBE,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GACnB,GAAIH,GAAM,EAAG,CACX,MAAMK,EAAO,KAAK,MAAML,EAAKI,CAAG,EAC1BE,EAAQ,KAAK,MAAON,EAAKI,EAAOD,CAAI,EACpCI,EAAU,KAAK,MAAQP,EAAKI,EAAOD,EAAQD,CAAM,EACjDM,EAAU,KAAK,MAASR,EAAKI,EAAOD,EAAQD,EAAUD,CAAM,EAElEN,EAAY,UAAYU,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACvDT,EAAa,UAAYU,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACzDT,EAAe,UAAYU,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC7DT,EAAe,UAAYU,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CACjE,MACI,cAAcf,CAAW,EACzBE,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,IAEjC"}